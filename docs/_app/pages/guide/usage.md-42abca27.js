import{S as Z,i as ss,s as as,e as r,t as $,k as i,j as L,c as k,a as m,g as _,d as c,n as g,m as T,b as P,f as Y,H as n,o as W,x as D,u as N,v as V,M as ns}from"../../chunks/vendor-c87b8896.js";import{A as ts,I as es}from"../../chunks/Alert-875d2049.js";import{B as ps}from"../../chunks/Button-91f229ee.js";import"../../chunks/Icon.svelte_svelte_type_style_lang-e06b57e2.js";function os(w){let s;return{c(){s=$("Your password has been updated successfully updated!")},l(e){s=_(e,"Your password has been updated successfully updated!")},m(e,o){Y(e,s,o)},d(e){e&&c(s)}}}function cs(w){let s,e,o,h,l;return s=new es({props:{name:"contentSave",color:"white"}}),{c(){L(s.$$.fragment),e=i(),o=r("span"),h=$("Click me"),this.h()},l(t){T(s.$$.fragment,t),e=g(t),o=k(t,"SPAN",{class:!0});var u=m(o);h=_(u,"Click me"),u.forEach(c),this.h()},h(){P(o,"class","pl-2")},m(t,u){W(s,t,u),Y(t,e,u),Y(t,o,u),n(o,h),l=!0},p:ns,i(t){l||(D(s.$$.fragment,t),l=!0)},o(t){N(s.$$.fragment,t),l=!1},d(t){V(s,t),t&&c(e),t&&c(o)}}}function ls(w){let s,e,o,h,l,t,u,v,K=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Alert <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'relicjs/components'</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Alert</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>check<span class="token punctuation">"</span></span> <span class="token attr-name">iconColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    Your password has been updated successfully updated!
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Alert</span><span class="token punctuation">></span></span></code>`,B,j,C,I,f,R,E,x,H,y,O=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Button<span class="token punctuation">,</span> Icon <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'relicjs/components'</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">outline</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>contentSave<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>white<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pl-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Click me<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span></code>`,J,S,M,U,d,q;return f=new ts({props:{type:"success",icon:"check",iconColor:"success",$$slots:{default:[os]},$$scope:{ctx:w}}}),d=new ps({props:{color:"success",$$slots:{default:[cs]},$$scope:{ctx:w}}}),{c(){s=r("div"),e=r("h1"),o=$("Usage"),h=i(),l=r("p"),t=$("You can easily import any components from RelicJS and start using it right away in your Sveltekit project:"),u=i(),v=r("pre"),B=i(),j=r("p"),C=$("Which results in:"),I=i(),L(f.$$.fragment),R=i(),E=r("p"),x=$("You can also compose your component using multiuple RelicJS components as well:"),H=i(),y=r("pre"),J=i(),S=r("p"),M=$("And that will give you the following result:"),U=i(),L(d.$$.fragment),this.h()},l(p){s=k(p,"DIV",{class:!0});var a=m(s);e=k(a,"H1",{});var A=m(e);o=_(A,"Usage"),A.forEach(c),h=g(a),l=k(a,"P",{});var b=m(l);t=_(b,"You can easily import any components from RelicJS and start using it right away in your Sveltekit project:"),b.forEach(c),u=g(a),v=k(a,"PRE",{class:!0});var Q=m(v);Q.forEach(c),B=g(a),j=k(a,"P",{});var z=m(j);C=_(z,"Which results in:"),z.forEach(c),I=g(a),T(f.$$.fragment,a),R=g(a),E=k(a,"P",{});var F=m(E);x=_(F,"You can also compose your component using multiuple RelicJS components as well:"),F.forEach(c),H=g(a),y=k(a,"PRE",{class:!0});var X=m(y);X.forEach(c),J=g(a),S=k(a,"P",{});var G=m(S);M=_(G,"And that will give you the following result:"),G.forEach(c),U=g(a),T(d.$$.fragment,a),a.forEach(c),this.h()},h(){P(v,"class","language-html"),P(y,"class","language-html"),P(s,"class","prose")},m(p,a){Y(p,s,a),n(s,e),n(e,o),n(s,h),n(s,l),n(l,t),n(s,u),n(s,v),v.innerHTML=K,n(s,B),n(s,j),n(j,C),n(s,I),W(f,s,null),n(s,R),n(s,E),n(E,x),n(s,H),n(s,y),y.innerHTML=O,n(s,J),n(s,S),n(S,M),n(s,U),W(d,s,null),q=!0},p(p,[a]){const A={};a&1&&(A.$$scope={dirty:a,ctx:p}),f.$set(A);const b={};a&1&&(b.$$scope={dirty:a,ctx:p}),d.$set(b)},i(p){q||(D(f.$$.fragment,p),D(d.$$.fragment,p),q=!0)},o(p){N(f.$$.fragment,p),N(d.$$.fragment,p),q=!1},d(p){p&&c(s),V(f),V(d)}}}class ms extends Z{constructor(s){super();ss(this,s,null,ls,as,{})}}export{ms as default};
